<template>
      <navigation />
    <main>
      <!-- –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–∞ -->
      <div class="heading-question">
        <h2 class="healding-max">–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞</h2>
        <span id="popUp-hint" class="healding-3">–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É</span>
      </div>
      <form class="constructor-test" @submit.prevent="question">
        <!-- –í–æ–ø—Ä–æ—Å 1 -->
        <div
          v-for="(question, index) in questions"
          :key="index"
          class="question"
        >
          <div class="heading">
            <h1 class="healding-max">–í–æ–ø—Ä–æ—Å</h1>
            <h1 class="healding-max">{{ index + 1 }}</h1>
          </div>
          <div class="content-question">
            <div class="description">
              <div class="input-label">
                <label class="healding-2-bold"
                  >–û–ø–∏—Å–∞–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–∞ <span id="required">*</span></label
                >
                <input
                  class="input-default texting-3"
                  type="text"
                  v-model="question.description"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ"
                  required
                />
              </div>
              <div class="input-label">
                <label class="healding-2-bold"
                  >–§–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è<span id="required">*</span></label
                >
                <input
                  class="input-default texting-3"
                  type="file"
                />
              </div>
            </div>
            <div class="constructor-answers">
              <div class="answers">
                <div
                  v-for="(answer, answerIndex) in question.answers"
                  :key="answerIndex"
                  class="input-label"
                >
                  <div class="radio-label">
                    <input
                      type="checkbox"
                      :name="'question' + index"
                      :id="'answer' + index + answerIndex"
                      v-model="answer.isCorrect"
                      :value="answer"
                    />
                    <label
                      for="'answer' + index + answerIndex"
                      class="texting-2"
                      >–í–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞</label
                    >
                    <span>{{ answerIndex + 1 }}</span>
                  </div>
                  <input
                    class="input-default texting-3"
                    type="text"
                    v-model="answer.text"
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞"
                    required
                  />
                </div>
              </div>

              <a
                href=""
                class="texting-1-bold"
                @click.prevent="addAnswer(index)"
                >+ –î–æ–±–∞–≤–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞</a
              >
            </div>
          </div>
        </div>
        <button
          class="button button-primary healding-3"
          type="button"
          @click="addQuestion"
        >
          –î–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–æ—Å
        </button>
      </form>
    </main>
    <footer>
      <div class="setting-test">
        <h2 class="healding-1">–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ—Å—Ç–∞</h2>
        <div class="inputs">
          <div class="input-label">
            <label for="" class="texting-1">–î–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ —Ç–µ—Å—Ç–∞</label>
            <input type="date" class="input-default" />
          </div>
          <div class="input-label">
            <label for="" class="texting-1">–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ç–µ—Å—Ç–∞</label>
            <input type="date" class="input-default texting-3" />
          </div>
          <div class="input-label">
            <label for="" class="texting-1">–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è</label>
            <input type="number" class="input-default texting-3" />
          </div>
          <div class="input-label">
            <label for="" class="texting-1">–í—ã–±–æ—Ä –≥—Ä—É–ø–ø</label>
            <select name="" id="" class="dropdown texting-3" v-model="selectedGroupId">
              <option value="" disabled selected>–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É</option> 
              <option v-for="group in groupTitles" :key="group.id" :value="group.id"> {{ group.title }}</option>
            </select>
          </div>
        </div>
      </div>
      <div class="information-test">
        <h2 class="healding-1">–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Å—Ç–µ</h2>
        <div class="update-test">
          <div class="input-label">
            <label for="" class="texting-1">–ó–∞–≥–æ–ª–æ–≤–æ–∫</label>
            <input
              type="text"
              class="input-default texting-3"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–≥–æ–ª–æ–≤–æ–µ —Ç–µ–∫—Å—Ç–∞"
            />
          </div>
          <div class="input-label" id="description">
            <label for="" class="texting-1">–û–ø–∏—Å–∞–Ω–∏–µ —Ç–µ—Å—Ç–∞</label>
            <textarea               
              class="input input-default texting-3"
              placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ">
            </textarea>
          </div>
          <div class="input-label">
            <label for="" class="texting-1">–û–±–ª–æ–∂–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏</label>
            <input type="fil"/>
          </div>
        </div>
        <button class="button button-primary healding-3" @click.prevent="submitTest">–û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å —Ç–µ—Å—Ç</button>
      </div>
  </footer>
</template>
<script setup>
import { ref } from 'vue'
import axios from 'axios'
import navigation from "../module/navigation.vue"
import {onMounted } from 'vue'
import http from '../http-common'

//–ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
const groupTitles = ref([])
const errorMessage = ref('')
const user = ref(null)

// –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è —Ç–µ—Å—Ç–∞
const title = ref('')
const description = ref('')
const img = ref(null)
const beginningDate = ref('')
const endDate = ref('')
const time = ref(0)
const selectedGroupId = ref('')
const teacherId = ref(1) // —Ç—É—Ç –ø–æ–¥—Å—Ç–∞–≤—å—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π id —É—á–∏—Ç–µ–ª—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑ store –∏–ª–∏ –ø—Ä–æ–ø—Å–æ–≤)

// –í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã
const questions = ref([
  {
    description: '',
    img: null,
    answers: [
      { text: '', isCorrect: false },
      { text: '', isCorrect: false }
    ]
  }
])

// üì° –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è –≥—Ä—É–ø–ø
const fetchGroupTitle = async () => {
  try {
    const res = await http.get(`/groups/${user.value.id}`)
    console.log('–ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: ', res.data)
    groupTitles.value = res.data.groupTitles
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –≥—Ä—É–ø–ø: ', error)
    errorMessage.value = '–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –≥—Ä—É–ø–ø—ã'
  }
}

// üöÄ –ó–∞–≥—Ä—É–∂–∞–µ–º –≥—Ä—É–ø–ø—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
onMounted(() => {
  const storedUser = JSON.parse(localStorage.getItem('user'))
  if (storedUser) {
    user.value = storedUser
    fetchGroupTitle()
  } else {
    errorMessage.value = '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω'
    console.warn('–ù–µ—Ç —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è')
  }
})


// –î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å
function addQuestion() {
  questions.value.push({
    description: '',
    img: null,
    answers: [
      { text: '', isCorrect: false },
      { text: '', isCorrect: false }
    ]
  })
}

// –î–æ–±–∞–≤–∏—Ç—å –≤–∞—Ä–∏–∞–Ω—Ç –æ—Ç–≤–µ—Ç–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É –≤–æ–ø—Ä–æ—Å—É
function addAnswer(questionIndex) {
  questions.value[questionIndex].answers.push({ text: '', isCorrect: false })
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
function onImageChange(event) {
  const file = event.target.files[0]
  img.value = file
}

// –°–±–æ—Ä –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
async function submitTest() {
  // –°–æ–±–µ—Ä—ë–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
  const beginningDateTime = beginningDate.value && time.value
  ? `${beginningDate.value}T${time.value}:00`
  : null
const endDateTime = endDate.value && time.value
  ? `${endDate.value}T${time.value}:00`
  : null

      // –Ø–≤–Ω–æ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º
      const durationMinutes = parseInt(time.value, 10);

if (isNaN(durationMinutes)) {
    // –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å –≤ —á–∏—Å–ª–æ (–Ω–∞–ø—Ä–∏–º–µ—Ä, time.value –±—ã–ª–æ '', null, undefined)
    alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —Ç–µ—Å—Ç–∞ –≤ –º–∏–Ω—É—Ç–∞—Ö.');
    console.error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏:', time.value); // –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
    return; // –ü—Ä–µ—Ä—ã–≤–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É
}

  const test = {
    title: title.value,
    description: description.value,
    img: img.value, // –µ—Å–ª–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Ñ–∞–π–ª, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ FormData!
    beginningDate: beginningDateTime,
    endDate: endDateTime,
    time: durationMinutes,
    groupId: selectedGroupId.value,
    teacherId: teacherId.value,
    questions: questions.value.map(q => ({
      description: q.description,
      img: q.img,
      answers: q.answers.map(a => ({
        text: a.text,
        isCorrect: a.isCorrect
      }))
    }))
  }

  try {
    // –ï—Å–ª–∏ –µ—Å—Ç—å —Ñ–∞–π–ª-–∫–∞—Ä—Ç–∏–Ω–∫–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —á–µ—Ä–µ–∑ FormData:
    let formData
    if (img.value) {
      formData = new FormData()
      for (const key in test) {
        if (key !== 'questions') formData.append(key, test[key])
      }
      formData.append('img', img.value)
      formData.append('questions', JSON.stringify(test.questions))
      await axios.post('/tests/createTest', formData)
    } else {
      // –ï—Å–ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–µ—Ç ‚Äî –ø—Ä–æ—Å—Ç–æ JSON
      await http.post('/createTest', test)
    }
    alert('–¢–µ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω!')
  } catch (error) {
    alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–∞')
    console.error(error)
  }
}

</script>

<style scoped>
@import "../css/components/block/buttons/button.css";
@import "../css/components/block/inputs/input.css";
@import "../css/components/variables/text-style.css";
@import "../css/components/variables/variables.css";
@import "../css/pages/create-test.css"; 
</style>
